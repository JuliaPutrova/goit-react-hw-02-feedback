{"version":3,"sources":["components/Title/Title.styled.jsx","components/Title/Title.js","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.styled.jsx","components/Notification/Notification.js","App.js","index.js"],"names":["Title","styled","p","Container","title","children","size","defaultProps","h2","StatisticItem","Statistics","good","neutral","bad","total","positivePercentage","OptionsList","ul","Button","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","NotificationMessage","Notification","message","App","state","e","target","textContent","setState","prevState","countTotalFeedback","Object","keys","reduce","acc","key","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAEaA,EAAQC,IAAOC,EAAV,2G,OCGlB,SAASC,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC1B,OACE,gCACE,cAACL,EAAD,UAAQI,IACR,cAAC,IAAD,CAAgBE,KAAM,KACrBD,KAMPF,EAAUI,aAAe,CACvBF,SAAU,IAQGF,I,IAAAA,ICvBFH,EAAQC,IAAOO,GAAV,mIAQLC,EAAgBR,IAAOC,EAAV,uF,QCSXQ,I,IAAAA,EAdf,YAA+E,IAAzDN,EAAwD,EAAxDA,MAAOO,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACtD,OACE,qCACE,cAAC,EAAD,UAAQX,IACR,cAAC,IAAD,CAAcE,KAAM,KACpB,eAACG,EAAD,oBAAsBE,KACtB,eAACF,EAAD,uBAAyBG,KACzB,eAACH,EAAD,mBAAqBI,KACrB,eAACJ,EAAD,qBAAuBK,KACvB,eAACL,EAAD,iCAAmCM,EAAnC,YCZOC,EAAcf,IAAOgB,GAAV,mDAIXC,EAASjB,IAAOkB,OAAV,mPCmBJC,I,EAAAA,EArBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,mCACE,6BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACR,EAAD,UACE,cAACE,EAAD,CAAQO,KAAK,SAASC,QAASJ,EAA/B,SACGE,KAFaA,WCPfG,EAAsB1B,IAAOC,EAAV,kGCejB0B,MAZf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mCACE,cAACF,EAAD,UAAsBE,OCFfC,EAAb,4MACEC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAQES,gBAAkB,SAAAU,GAChB,IAAMR,EAASQ,EAAEC,OAAOC,YACxB,EAAKC,UAAS,SAAAC,GAAS,sBACpBZ,EAASY,EAAUZ,GAAU,OAXpC,EAgBEa,mBAAqB,WAKnB,OAJcC,OAAOC,KAAK,EAAKR,OAAOS,QACpC,SAACC,EAAKC,GAAN,OAAcD,EAAM,EAAKV,MAAMW,KAC/B,IAnBN,EAyBEC,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKd,MAAMpB,KAAO,EAAK0B,qBAAwB,MA1BtE,4CA6BE,WAEE,IAAME,EAAOD,OAAOC,KAAKO,KAAKf,OAE9B,EAA+Be,KAAKf,MAA5BpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,eAAC,EAAD,CAAWT,MAAM,wBAAjB,UACE,cAAC,EAAD,CACEiB,QAASkB,EACTjB,gBAAiBwB,KAAKxB,kBAEvBwB,KAAKT,qBACJ,cAAC,EAAD,CACEjC,MAAM,aACNO,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgC,KAAKT,qBACZtB,mBAAoB+B,KAAKH,oCAG3B,cAAC,EAAD,CAAcd,QAAQ,6BAnDhC,GAAyBkB,aCDzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1b938527.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.p`\r\nfont-weight: 900;\r\nfont-size: 30px;\r\ndisplay: inline-flex;\r\nmargin: 20px 15px\r\n`;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RiFeedbackLine } from 'react-icons/ri';\nimport { Title } from './Title.styled';\n\nfunction Container({ title, children }) {\n  return (\n    <div>\n      <Title>{title}</Title>\n      <RiFeedbackLine size={30} />\n      {children}\n    </div>\n  );\n}\n\n//указываем пропс по умолчанию дла детей, т.к. мы не указываем isRequired\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h2`\r\nfont-weight: 900;\r\nfont-size: 30px;\r\nmargin-bottom: 20px;\r\ndisplay: inline-flex;\r\nmargin-right: 10px;\r\n`;\r\n\r\nexport const StatisticItem = styled.p`\r\nfont-weight: 500;\r\nfont-size: 20px;\r\nmargin-bottom: 10px;\r\n`;","import React from 'react';\nimport { Title, StatisticItem } from './Statistics.styled';\nimport PropTypes from 'prop-types';\nimport { FcStatistics } from 'react-icons/fc';\n\nfunction Statistics({ title, good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <Title>{title}</Title>\n      <FcStatistics size={30} />\n      <StatisticItem>Good: {good}</StatisticItem>\n      <StatisticItem>Neutral: {neutral}</StatisticItem>\n      <StatisticItem>Bad: {bad}</StatisticItem>\n      <StatisticItem>Total: {total}</StatisticItem>\n      <StatisticItem>Positive feedback: {positivePercentage} %</StatisticItem>\n    </>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const OptionsList = styled.ul`\r\ndisplay: inline-flex;\r\n`;\r\n\r\nexport const Button = styled.button`\r\nfont-size: 20px;\r\nfont-weight: bold;\r\npadding: 10px;\r\nbackground-color: #fff;\r\nmargin-right: 30px;\r\nmargin: 0px 10px 20px 10px;\r\nborder-radius: 10px;\r\nborder: 3px solid;\r\n    &:hover {\r\n    color: #000280;\r\n  };\r\n\r\n`;","import React from 'react';\nimport { OptionsList, Button } from './FeedbackOptions.styled.jsx';\nimport PropTypes from 'prop-types';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <>\n      <ul>\n        {options.map(option => (\n          <OptionsList key={option}>\n            <Button type=\"button\" onClick={onLeaveFeedback}>\n              {option}\n            </Button>\n          </OptionsList>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import styled from '@emotion/styled';\r\n\r\nexport const NotificationMessage = styled.p`\r\nfont-weight: 900;\r\nfont-size: 15px;\r\ncolor: red;\r\nmargin-left: 15px;\r\n`;\r\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nimport { NotificationMessage } from './Notification.styled';\n\nfunction Notification({ message }) {\n  return (\n    <>\n      <NotificationMessage>{message}</NotificationMessage>\n    </>\n  );\n}\n\nNotification.propTypes = {\n  message: Proptypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Container from './components/Title/Title';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  //метод для прослушивания события по кнопкам\n  onLeaveFeedback = e => {\n    const option = e.target.textContent;\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  //метод для подсчета общего количество feedback с помощью метода reduce\n  countTotalFeedback = () => {\n    const total = Object.keys(this.state).reduce(\n      (acc, key) => acc + this.state[key],\n      0,\n    );\n    return total;\n  };\n\n  //метод для поиска % положительный отзывов\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    //получаем ключи из state\n    const keys = Object.keys(this.state);\n    //деструктуризация\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Container title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={keys}\n          onLeaveFeedback={this.onLeaveFeedback}\n        ></FeedbackOptions>\n        {this.countTotalFeedback() ? (\n          <Statistics\n            title=\"Statistics\"\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}